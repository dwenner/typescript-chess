{"version":3,"sources":["../chess.ts"],"names":[],"mappings":"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","file":"chess.js","sourcesContent":["'use strict'\r\n/**\r\n * Board\r\n */\r\nclass Board {\r\n    squares: Square[];\r\n    boardContainer: JQuery;\r\n    statusContainer: JQuery;\r\n\r\n    markActive(square: Square) {\r\n        this.removeActive();\r\n        var active = 'active';\r\n        var jqSquare = this.boardContainer.find(square.getSelector());\r\n        jqSquare.addClass(active);\r\n    }\r\n\r\n    removeActive() {\r\n        this.boardContainer.find('.chess-square').removeClass('active');\r\n    }\r\n\r\n    writePieces(pieces: Piece[]): void {\r\n        $('.chess-piece').remove();\r\n        pieces.forEach((p) => {\r\n            $('#' + p.placedAt.getName()).html(`<span id=${p.getId()}\r\n            class='chess-piece chess-piece-${p.getColorName().toLocaleLowerCase()}'>\r\n            ${p.symbol}\r\n            </span>`);\r\n        });\r\n    };\r\n\r\n    writeBoard(): JQuery {\r\n        let newBoardElement = this.boardContainer.html(\"<table id='chessTable'><thead id='chessHead'></thead></thead><tbody id='chessBody'></tbody><tfoot id='chessFoot'></tfoot></table>\");\r\n        let chessBody = $('#chessBody');\r\n        this.squares = new Array<Square>();\r\n        for (var i = 8; i >= 1; i--) {\r\n            let rowString = \"chessRow\" + i;\r\n            chessBody.append(`<tr id='${rowString}'></tr>`);\r\n            for (var j = 1; j <= 8; j++) {\r\n                let square = new Square(i, j);\r\n                this.squares.push(square);\r\n                $('#' + rowString).append(`<td id='${square.getName()}' data-row='${square.row}' data-col='${square.column}' class='chess-square chess-${this.colorClass(square)}'></td>`);\r\n            }\r\n        }\r\n        return newBoardElement;\r\n    };\r\n\r\n    writeStatus(playedMoves: Move[], toMove: Player): JQuery {\r\n        var moveList = this.statusContainer.find('#moves').html('');;\r\n        playedMoves.forEach((move) => {\r\n            moveList.append(`<li>${move.getNotation()}</li>`);\r\n        });\r\n\r\n        var colorClass = `chess-${this.colorClass(toMove)}`;\r\n        this.statusContainer.find('#nextMove').removeClass().addClass(colorClass);\r\n        return this.statusContainer;\r\n    }\r\n\r\n    constructor(boardSelector: JQuery, statusSelector: JQuery, startingPieces: Piece[]) {\r\n        this.boardContainer = boardSelector.first();\r\n        this.statusContainer = statusSelector.first();\r\n        this.writeBoard();\r\n        this.writePieces(startingPieces);\r\n    };\r\n\r\n    private colorClass<T>(T: IHasColor): string { return T.getColorName().toLowerCase(); }\r\n}\r\n\r\ninterface IHasColor {\r\n    getColorName(): string;\r\n}\r\n\r\nclass Chess {\r\n    board: Board;\r\n    playedMoves: Move[];\r\n    activeMove: Move;\r\n    toMove: Player;\r\n    players: Player[];\r\n    selector: JQuery;\r\n\r\n    startMove(piece: Piece) {\r\n        this.board.markActive(piece.placedAt);\r\n        piece.selected = true;\r\n        this.activeMove = new Move(piece.placedAt, piece);\r\n    };\r\n    endMove(piece: Piece, newSquare: Square, piceToCapture: Piece): boolean {\r\n        if (!newSquare && !piece && this.activeMove == null) return false;\r\n        this.activeMove.completeMove(newSquare, piceToCapture);\r\n        this.playedMoves.push(this.activeMove);\r\n        this.activeMove = null;\r\n        this.board.removeActive();\r\n        piece.placedAt = newSquare;\r\n        piece.moved = true;\r\n        piece.selected = false;\r\n        var colorToMoveNext = this.toMove.color === Color.White ? Color.Black : Color.White;\r\n        this.toMove = this.players[colorToMoveNext];\r\n        return true;\r\n    };\r\n    getPieces(): Piece[] {\r\n        let pieces = new Array<Piece>().concat(\r\n            this.players[Color.Black].pieces,\r\n            this.players[Color.White].pieces\r\n        );\r\n        return pieces;\r\n    }\r\n\r\n    updateBoard(): void {\r\n        this.board.writePieces(this.getPieces().filter((p) => !p.captured));\r\n        this.board.writeStatus(this.playedMoves, this.toMove);\r\n    };\r\n\r\n    pieceClick(event: JQuery.TriggeredEvent): boolean {\r\n        var pieceId = event.target.id;\r\n        var pieces = this.getPieces();\r\n        var anySelected = this.anySelected(pieces);\r\n\r\n        var piece = pieces.find((p) => p.getId() === pieceId);\r\n        if (anySelected && this.toMove.color !== piece.color) {//capture piece \r\n            this.capturePiece(piece, pieces.find((p) => p.selected));\r\n        }\r\n        else if (this.toMove.color === piece.color) {\r\n            pieces.forEach((p) => p.selected = false);\r\n            this.startMove(piece);\r\n        }\r\n        this.updateBoard();\r\n        return false;\r\n    };\r\n\r\n    squareClick(event: JQuery.TriggeredEvent): boolean {\r\n\r\n        if (event.currentTarget !== event.target) return false;\r\n        var squareId = event.target.id;\r\n        var pieces = this.getPieces();\r\n        var anySelected = this.anySelected(pieces);\r\n\r\n        var square = this.board.squares.find((s) => s.getName() == event.target.id)\r\n        if (anySelected && this.activeMove) { //Todo: This will not work for en passant as you are not clicking a piece. \r\n            var currentMove = this.activeMove;\r\n            this.endMove(currentMove.piece, square, null);\r\n        }\r\n        this.updateBoard();\r\n        return false;\r\n    }\r\n\r\n    bindEvents(selector: JQuery): void {\r\n        selector.on('click', '.chess-piece', (eventObject) => {\r\n            this.pieceClick(eventObject);\r\n        });\r\n        selector.on('click', '.chess-square', (eventObject) => {\r\n            this.squareClick(eventObject);\r\n        });\r\n    };\r\n    constructor(selector: JQuery, statusSelector: JQuery) {\r\n\r\n        this.players = [new Player(Color.White), new Player(Color.Black)];\r\n        this.toMove = this.players[Color.White];\r\n        this.playedMoves = new Array<Move>();\r\n        this.board = new Board(selector, statusSelector, this.getPieces());\r\n        this.bindEvents(selector);\r\n        this.selector = selector;\r\n    };\r\n    private capturePiece(pieceToCapture: Piece, pieceToMove: Piece): boolean {\r\n        if (pieceToCapture.color === pieceToMove.color && this.playedMoves[this.playedMoves.length])\r\n            return false;\r\n        pieceToCapture.captured = true;\r\n        this.endMove(pieceToMove, pieceToCapture.placedAt, pieceToCapture);\r\n        return false;\r\n    };\r\n    private anySelected(pieces: Piece[]): boolean {\r\n        return pieces.some((p) => p.selected);\r\n    }\r\n    private getLastMove(): Move {\r\n        var length = this.playedMoves.length;\r\n        if (length === 0) return null;\r\n        return this.playedMoves[length - 1];\r\n    }\r\n\r\n    private replaceLastMove(move: Move): number {\r\n        this.playedMoves.pop();\r\n        return this.playedMoves.push(move);\r\n    }\r\n}\r\n\r\nclass Move {\r\n    start: Square;\r\n    end: Square;\r\n    piece: Piece;\r\n    capture: Piece;\r\n    isComplete: boolean;\r\n\r\n    getNotation(): string {\r\n        return this.piece.symbol + this.start.getName() + (this.capture ? 'x' + this.capture.symbol : '') + ' ' + this.end.getName();\r\n    }\r\n\r\n    completeMove(end: Square, capture: Piece): Move {\r\n        this.isComplete = true;\r\n        this.capture = capture;\r\n        this.end = end;\r\n        return this;\r\n    }\r\n\r\n    constructor(start: Square, piece: Piece) {\r\n        this.isComplete = false;\r\n        this.capture = null;\r\n        this.piece = piece;\r\n        this.start = start;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Piece\r\n *\r\n */\r\nclass Piece implements IHasColor {\r\n\r\n    color: Color;\r\n    placedAt: Square;\r\n    startAt: Square;\r\n    type: PieceType;\r\n    moved: boolean;\r\n    captured: boolean;\r\n    selected: boolean;\r\n    symbol: string;\r\n\r\n    getId(): string {\r\n        return this.startAt.getName() + this.symbol;\r\n    }\r\n\r\n    getColorName(): string {\r\n        return Color[this.color];\r\n    }\r\n\r\n    constructor(\r\n        piceType: PieceType,\r\n        pieceColor: Color,\r\n        startAt: Square,\r\n        symbol: string) {\r\n        this.type = piceType;\r\n        this.color = pieceColor;\r\n        this.placedAt = startAt;\r\n        this.startAt = startAt;\r\n        this.symbol = symbol;\r\n        this.moved = false;\r\n        this.captured = false;\r\n        this.selected = false;\r\n    }\r\n}\r\n\r\nclass King extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♔' : '♚';\r\n        super(PieceType.King, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Queen extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♕' : '♛';\r\n        super(PieceType.Queen, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Bishop extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♗' : '♝';\r\n        super(PieceType.Bishop, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Knight extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♘' : '♞';\r\n        super(PieceType.Knight, pieceColor, placedAt, symbol);\r\n\r\n    }\r\n}\r\n\r\nclass Rook extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♖' : '♜';\r\n        super(PieceType.Rook, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Pawn extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♙' : '♟';\r\n        super(PieceType.Pawn, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Square\r\n */\r\nclass Square implements IHasColor {\r\n    row: number;\r\n    column: Columns;\r\n\r\n    getLetter() {\r\n        return Columns[this.column];\r\n    };\r\n\r\n    getName(): string {\r\n        return this.getLetter() + this.row;\r\n    }\r\n\r\n    getSelector(): string {\r\n        return '#' + this.getName();\r\n    }\r\n\r\n    getColor() {\r\n        return (this.row + this.column - 1) % 2\r\n    }\r\n\r\n    getColorName() {\r\n        return Color[this.getColor()];\r\n    }\r\n\r\n    constructor(row: number, column: Columns) {\r\n        this.row = row;\r\n        this.column = column;\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Player\r\n */\r\nclass Player implements IHasColor {\r\n    color: Color;\r\n    direction: MoveDirection;\r\n    pieces: Piece[];\r\n\r\n    isWhite(): boolean {\r\n        return this.color === Color.White;\r\n    }\r\n\r\n    getColorName(): string {\r\n        return Color[this.color];\r\n    }\r\n\r\n    constructor(color: Color) {\r\n        this.color = color;\r\n        this.direction = color == Color.White ? MoveDirection.Up : MoveDirection.Down;\r\n        let startingRow = this.isWhite() ? 1 : 8;\r\n        this.pieces = new Array<Piece>(\r\n            new Rook(color, new Square(startingRow, Columns.A)),\r\n            new Rook(color, new Square(startingRow, Columns.H)),\r\n            new Knight(color, new Square(startingRow, Columns.G)),\r\n            new Bishop(color, new Square(startingRow, Columns.C)),\r\n            new Bishop(color, new Square(startingRow, Columns.F)),\r\n            new Knight(color, new Square(startingRow, Columns.B)),\r\n            new Queen(color, new Square(startingRow, Columns.D)),\r\n            new King(color, new Square(startingRow, Columns.E))\r\n        ).concat(this.getStartingPawns());\r\n    }\r\n\r\n    private getStartingPawns(): Pawn[] {\r\n        var pawns = new Array<Pawn>();\r\n        for (var i = 1; i <= 8; i++) {\r\n            pawns.push(new Pawn(this.color, new Square(this.isWhite() ? 2 : 7, i)));\r\n        }\r\n        return pawns;\r\n    }\r\n}\r\n\r\nenum PieceType { King = 1, Queen, Rook, Knight, Bishop, Tower, Pawn }\r\nenum Color { White, Black }\r\nenum MoveDirection { Up = 1, Down = -1 }\r\nenum Columns { A = 1, B, C, D, E, F, G, H }\r\n\r\n\r\n$(function () {\r\n    const chessGame = new Chess($(\"#board\"), $(\"#status\"));\r\n});\r\n\r\n\r\n\r\n"]}